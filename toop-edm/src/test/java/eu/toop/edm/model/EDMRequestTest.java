package eu.toop.edm.model;

import com.helger.commons.datetime.PDTFactory;
import com.helger.commons.mime.CMimeType;
import eu.toop.edm.pilot.gbm.EToopConcept;
import org.junit.Test;

import java.time.Month;
import java.util.Locale;

public class EDMRequestTest {

    @Test
    public void createEDMDocumentRequestNP() {
        EDMRequest request = new EDMRequest.Builder()
                .issuedNow()
                .withProcedure(Locale.US, "GBM Procedure")
                .withDataConsumer(AgentPojo.builder()
                        .address(AddressPojo.builder()
                                .town("MyTown")
                                .streetName("MyStreet")
                                .buildingNumber("22")
                                .countryCode("GR")
                                .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                .postalCode("11134").build())
                        .name("DC NAME")
                        .id("1234")
                        .idSchemeID("VAT")
                        .build())
                .withAuthorizedRepresentative(PersonPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .birthDate(PDTFactory.createLocalDate(1994, Month.FEBRUARY, 1))
                        .birthTown("ATown")
                        .birthName("John Doe")
                        .familyName("Doe")
                        .genderCode(EGenderCode.M)
                        .givenName("John")
                        .id("LALALA")
                        .idSchemeID("LALALA")
                        .build())
                .withDataSubject(PersonPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .birthDate(PDTFactory.createLocalDate(1994, Month.FEBRUARY, 1))
                        .birthTown("ATown")
                        .birthName("John Doe")
                        .familyName("Doe")
                        .genderCode(EGenderCode.M)
                        .givenName("John")
                        .id("LALALA")
                        .idSchemeID("LALALA")
                        .build())
                .withDatasetIdentifier("IdentifierForDatasets")
                .withSpecificationIdentifier("SpecID")
                .withConsentToken("AAABBB")
                .withResponseOption("ResponseOption")
                .withDistribution(DistributionPojo.builder()
                        .format(EDistributionFormat.STRUCTURED)
                        .mediaType(CMimeType.APPLICATION_PDF).build())
                .build();
    }

    @Test
    public void createEDMConceptRequestLP() {
        EDMRequest request = new EDMRequest.Builder()
                .issuedNow()
                .withProcedure(Locale.US, "GBM Procedure")
                .withDataConsumer(AgentPojo.builder()
                        .address(AddressPojo.builder()
                                .town("MyTown")
                                .streetName("MyStreet")
                                .buildingNumber("22")
                                .countryCode("GR")
                                .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                .postalCode("11134").build())
                        .name("DC NAME")
                        .id("1234")
                        .idSchemeID("VAT")
                        .build())
                .withAuthorizedRepresentative(PersonPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .birthDate(PDTFactory.createLocalDate(1994, Month.FEBRUARY, 1))
                        .birthTown("ATown")
                        .birthName("John Doe")
                        .familyName("Doe")
                        .genderCode(EGenderCode.M)
                        .givenName("John")
                        .id("LALALA")
                        .idSchemeID("LALALA")
                        .build())
                .withDataSubject(BusinessPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .legalID("Niar")
                        .legalIDSchemeID("Tsiou")
                        .legalName("NiarTsiou")
                        .id("anID")
                        .build())
                .withDatasetIdentifier("IdentifierForDatasets")
                .withSpecificationIdentifier("SpecID")
                .withConsentToken("AAABBB")
                .withResponseOption("ResponseOption")
                .withConcept(ConceptPojo.builder()
                        .randomID()
                        .name(EToopConcept.NAMESPACE_URI, EToopConcept.REGISTERED_ORGANIZATION.getID())
                        .addChild(ConceptPojo.builder()
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.COMPANY_NAME.getID())
                                .randomID()
                                .build())
                        .addChild(ConceptPojo.builder()
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.COMPANY_CODE.getID())
                                .randomID()
                                .build())
                        .addChild(ConceptPojo.builder()
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.COMPANY_TYPE.getID())
                                .randomID()
                                .build())
                        .build())
                .build();
    }

    @Test(expected = IllegalArgumentException.class)
    public void testEDMRequestNPLP() {
        EDMRequest request = new EDMRequest.Builder()
                .issuedNow()
                .withDataConsumer(AgentPojo.builder()
                        .address(AddressPojo.builder()
                                .town("MyTown")
                                .streetName("MyStreet")
                                .buildingNumber("22")
                                .countryCode("GR")
                                .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                .postalCode("11134").build())
                        .name("DC NAME")
                        .id("1234")
                        .idSchemeID("VAT")
                        .build())
                .withAuthorizedRepresentative(PersonPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .birthDate(PDTFactory.createLocalDate(1994, Month.FEBRUARY, 1))
                        .birthTown("ATown")
                        .birthName("John Doe")
                        .familyName("Doe")
                        .genderCode(EGenderCode.M)
                        .givenName("John")
                        .id("LALALA")
                        .idSchemeID("LALALA")
                        .build())
                .withDataSubject(PersonPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .birthDate(PDTFactory.createLocalDate(1994, Month.FEBRUARY, 1))
                        .birthTown("ATown")
                        .birthName("John Doe")
                        .familyName("Doe")
                        .genderCode(EGenderCode.M)
                        .givenName("John")
                        .id("LALALA")
                        .idSchemeID("LALALA")
                        .build())
                .withDataSubject(BusinessPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .legalID("Niar")
                        .legalIDSchemeID("Tsiou")
                        .legalName("NiarTsiou")
                        .id("anID")
                        .build())
                .withDatasetIdentifier("IdentifierForDatasets")
                .withSpecificationIdentifier("SpecID")
                .withConsentToken("AAABBB")
                .withResponseOption("ResponseOption")
                .withDistribution(DistributionPojo.builder()
                        .format(EDistributionFormat.STRUCTURED)
                        .mediaType(CMimeType.APPLICATION_PDF).build())
                .build();
    }

    @Test(expected = IllegalArgumentException.class)
    public void createEDMDocumentConceptRequestNP() {
        EDMRequest request = new EDMRequest.Builder()
                .issuedNow()
                .withDataConsumer(AgentPojo.builder()
                        .address(AddressPojo.builder()
                                .town("MyTown")
                                .streetName("MyStreet")
                                .buildingNumber("22")
                                .countryCode("GR")
                                .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                .postalCode("11134").build())
                        .name("DC NAME")
                        .id("1234")
                        .idSchemeID("VAT")
                        .build())
                .withAuthorizedRepresentative(PersonPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .birthDate(PDTFactory.createLocalDate(1994, Month.FEBRUARY, 1))
                        .birthTown("ATown")
                        .birthName("John Doe")
                        .familyName("Doe")
                        .genderCode(EGenderCode.M)
                        .givenName("John")
                        .id("LALALA")
                        .idSchemeID("LALALA")
                        .build())
                .withDataSubject(PersonPojo.builder()
                        .address(
                                AddressPojo.builder()
                                        .town("MyTown")
                                        .streetName("MyStreet")
                                        .buildingNumber("22")
                                        .countryCode("GR")
                                        .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                        .postalCode("11134").build())
                        .birthDate(PDTFactory.createLocalDate(1994, Month.FEBRUARY, 1))
                        .birthTown("ATown")
                        .birthName("John Doe")
                        .familyName("Doe")
                        .genderCode(EGenderCode.M)
                        .givenName("John")
                        .id("LALALA")
                        .idSchemeID("LALALA")
                        .build())
                .withDatasetIdentifier("IdentifierForDatasets")
                .withSpecificationIdentifier("SpecID")
                .withConsentToken("AAABBB")
                .withResponseOption("ResponseOption")
                .withDistribution(DistributionPojo.builder()
                        .format(EDistributionFormat.STRUCTURED)
                        .mediaType(CMimeType.APPLICATION_PDF).build())
                .withConcept(ConceptPojo.builder()
                        .randomID()
                        .name(EToopConcept.NAMESPACE_URI, EToopConcept.REGISTERED_ORGANIZATION.getID())
                        .addChild(ConceptPojo.builder()
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.COMPANY_NAME.getID())
                                .randomID()
                                .build())
                        .addChild(ConceptPojo.builder()
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.COMPANY_CODE.getID())
                                .randomID()
                                .build())
                        .addChild(ConceptPojo.builder()
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.COMPANY_TYPE.getID())
                                .randomID()
                                .build())
                        .build())
                .build();
    }
}