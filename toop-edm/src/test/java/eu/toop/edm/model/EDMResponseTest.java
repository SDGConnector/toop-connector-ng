package eu.toop.edm.model;

import com.helger.commons.datetime.PDTFactory;
import eu.toop.edm.pilot.gbm.EToopConcept;
import eu.toop.regrep.ERegRepResponseStatus;
import org.junit.Test;

import java.time.Month;
import java.util.UUID;

public class EDMResponseTest {

    @Test
    public void createConceptResponse() {
        EDMResponse res = new EDMResponse.Builder(UUID.randomUUID())
                .issuedNow()
                .withConceptResponse(ConceptPojo.builder()
                        .id("ConceptID-1")
                        .name(EToopConcept.NAMESPACE_URI, EToopConcept.REGISTERED_ORGANIZATION.getID())
                        .addChild(ConceptPojo.builder()
                                .id("ConceptID-2")
                                .name(EToopConcept.NAMESPACE_URI,
                                        EToopConcept.COMPANY_NAME.getID())
                                .valueText("Helger Enterprises"))
                        .addChild(ConceptPojo.builder()
                                .id("ConceptID-3")
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.FAX_NUMBER.getID())
                                .valueText("342342424"))
                        .addChild(ConceptPojo.builder()
                                .id("ConceptID-9")
                                .name(EToopConcept.NAMESPACE_URI,
                                        EToopConcept.FOUNDATION_DATE.getID())
                                .valueDate(PDTFactory.createLocalDate(1960, Month.AUGUST, 12)))
                        .build())
                .withDataProvider(AgentPojo.builder()
                        .address(AddressPojo.builder()
                                .town("MyTown")
                                .streetName("MyStreet")
                                .buildingNumber("22")
                                .countryCode("GR")
                                .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                .postalCode("11134").build())
                        .name("DP NAME")
                        .id("1234")
                        .idSchemeID("VAT")
                        .build())
                .withResponseStatus(ERegRepResponseStatus.SUCCESS)
                .withSpecificationIdentifier("Niar")
                .build();
    }

    @Test
    public void createDocumentResponse() {
        EDMResponse res = new EDMResponse.Builder(UUID.randomUUID())
                .issuedNow()
                .withDatasetResponse((DatasetPojo.builder()
                        .description("bla desc")
                        .title("bla title")
                        .distribution(DocumentReferencePojo.builder()
                                .documentURI("URI")
                                .documentDescription("DocumentDescription")
                                .documentType("docType")
                                .localeCode("GR"))
                        .creator(AgentPojo.builder()
                                .name("Agent name")
                                .address(AddressPojo.builder()
                                        .town("Kewlkidshome")))
                        .ids("RE238918378", "DOC-555")
                        .issuedNow()
                        .language("en")
                        .lastModifiedNow()
                        .validFrom(PDTFactory.getCurrentLocalDate()
                                .minusMonths(1))
                        .validTo(PDTFactory.getCurrentLocalDate()
                                .plusYears(1))
                        .qualifiedRelation(QualifiedRelationPojo.builder()
                                .description("LegalResourceDesc")
                                .title("Name")
                                .id("RE238918378")))
                        .build())
                .withDataProvider(AgentPojo.builder()
                        .address(AddressPojo.builder()
                                .town("MyTown")
                                .streetName("MyStreet")
                                .buildingNumber("22")
                                .countryCode("GR")
                                .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                .postalCode("11134").build())
                        .name("DP NAME")
                        .id("1234")
                        .idSchemeID("VAT")
                        .build())
                .withResponseStatus(ERegRepResponseStatus.SUCCESS)
                .withSpecificationIdentifier("Niar")
                .build();
    }

    @Test(expected = IllegalArgumentException.class)
    public void crateDocumentConceptResponse() {
        EDMResponse res = new EDMResponse.Builder(UUID.randomUUID())
                .issuedNow()
                .withConceptResponse(ConceptPojo.builder()
                        .id("ConceptID-1")
                        .name(EToopConcept.NAMESPACE_URI, EToopConcept.REGISTERED_ORGANIZATION.getID())
                        .addChild(ConceptPojo.builder()
                                .id("ConceptID-2")
                                .name(EToopConcept.NAMESPACE_URI,
                                        EToopConcept.COMPANY_NAME.getID())
                                .valueText("Helger Enterprises"))
                        .addChild(ConceptPojo.builder()
                                .id("ConceptID-3")
                                .name(EToopConcept.NAMESPACE_URI, EToopConcept.FAX_NUMBER.getID())
                                .valueText("342342424"))
                        .addChild(ConceptPojo.builder()
                                .id("ConceptID-9")
                                .name(EToopConcept.NAMESPACE_URI,
                                        EToopConcept.FOUNDATION_DATE.getID())
                                .valueDate(PDTFactory.createLocalDate(1960, Month.AUGUST, 12)))
                        .build())
                .withDataProvider(AgentPojo.builder()
                        .address(AddressPojo.builder()
                                .town("MyTown")
                                .streetName("MyStreet")
                                .buildingNumber("22")
                                .countryCode("GR")
                                .fullAddress("MyStreet 22, 11134, MyTown, GR")
                                .postalCode("11134").build())
                        .name("DP NAME")
                        .id("1234")
                        .idSchemeID("VAT")
                        .build())
                .withDatasetResponse((DatasetPojo.builder()
                        .description("bla desc")
                        .title("bla title")
                        .distribution(DocumentReferencePojo.builder()
                                .documentURI("URI")
                                .documentDescription("DocumentDescription")
                                .documentType("docType")
                                .localeCode("GR"))
                        .creator(AgentPojo.builder()
                                .name("Agent name")
                                .address(AddressPojo.builder()
                                        .town("Kewlkidshome")))
                        .ids("RE238918378", "DOC-555")
                        .issuedNow()
                        .language("en")
                        .lastModifiedNow()
                        .validFrom(PDTFactory.getCurrentLocalDate()
                                .minusMonths(1))
                        .validTo(PDTFactory.getCurrentLocalDate()
                                .plusYears(1))
                        .qualifiedRelation(QualifiedRelationPojo.builder()
                                .description("LegalResourceDesc")
                                .title("Name")
                                .id("RE238918378")))
                        .build())
                .withDatasetResponse(DatasetPojo.builder().build())
                .withResponseStatus(ERegRepResponseStatus.SUCCESS)
                .withSpecificationIdentifier("Niar")
                .build();
    }
}